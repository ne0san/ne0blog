---
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogPost from '../../components/BlogPost.astro';
type Params = {
  tag: string;
};
type Props = {
  posts: Array<any>;
};
export async function getStaticPaths(): Promise<Array<{ params: Params; props: Props }>> {
  const allPosts = await Astro.glob('../posts/*.md');
  // 全てのmdからタグを抽出
  const uniqueTags = [...new Set(allPosts.map((post) => post.frontmatter.tags).flat())];
  // 全てのタグに対し、そのタグが含まれた記事を抽出し、paramおよびpropとする
  return uniqueTags.map((tag) => {
    const filteredPosts = allPosts.filter((post) => post.frontmatter.tags.includes(tag));
    return {
      params: { tag },
      props: { posts: filteredPosts },
    };
  });
}

const { tag } = Astro.params as Params;
const { posts } = Astro.props as Props;
---

<BaseLayout pageTitle=`#${tag}`>
  <p>{tag}のタグが付いた記事</p>
  <ul>
    {posts.map((post) => <BlogPost url={post.url} title={post.frontmatter.title} />)}
  </ul>
</BaseLayout>
